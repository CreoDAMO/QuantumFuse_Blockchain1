# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.73.0"
name = "jsonwebtoken"
version = "9.3.0"
authors = ["Vincent Prouillet <hello@vincentprouillet.com>"]
include = [
    "src/**/*",
    "benches/**/*",
    "tests/**/*",
    "LICENSE",
    "README.md",
    "CHANGELOG.md",
]
description = "Create and decode JWTs in a strongly typed way."
homepage = "https://github.com/Keats/jsonwebtoken"
readme = "README.md"
keywords = [
    "jwt",
    "api",
    "token",
    "jwk",
]
license = "MIT"
repository = "https://github.com/Keats/jsonwebtoken"

[[bench]]
name = "jwt"
harness = false

[dependencies.base64]
version = "0.21.0"

[dependencies.pem]
version = "3"
optional = true

[dependencies.serde]
version = "1.0"
features = ["derive"]

[dependencies.serde_json]
version = "1.0"

[dependencies.simple_asn1]
version = "0.6"
optional = true

[dev-dependencies.wasm-bindgen-test]
version = "0.3.1"

[features]
default = ["use_pem"]
use_pem = [
    "pem",
    "simple_asn1",
]

[target."cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dev-dependencies.criterion]
version = "0.4"
default-features = false

[target."cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dev-dependencies.time]
version = "0.3"
features = ["wasm-bindgen"]

[target."cfg(not(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\")))))".dev-dependencies.criterion]
version = "0.4"

[target."cfg(not(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\")))))".dev-dependencies.time]
version = "0.3"

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.ring]
version = "0.17.4"
features = ["std"]

[target."cfg(target_arch = \"wasm32\")".dependencies.js-sys]
version = "0.3"

[target."cfg(target_arch = \"wasm32\")".dependencies.ring]
version = "0.17.4"
features = [
    "std",
    "wasm32_unknown_unknown_js",
]

[badges.maintenance]
status = "passively-maintained"
