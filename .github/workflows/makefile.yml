name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      ipfs:
        image: ipfs/go-ipfs:latest
        ports:
          - 5001:5001

    strategy:
      matrix:
        language: [rust, go, python, nodejs]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache
          ./build
        key: ${{ runner.os }}-build-${{ hashFiles('**/configure', '**/Makefile.am', '**/Makefile.in', '**/Cargo.lock', '**/go.sum', '**/requirements.txt', '**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Set up dependencies
      run: sudo apt-get update && sudo apt-get install -y build-essential autoconf automake libtool cmake

    # Rust setup and build
    - name: Install rustup
      if: matrix.language == 'rust'
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env

    - name: Set up Rust nightly toolchain
      if: matrix.language == 'rust'
      run: |
        rustup default nightly
        rustup component add rust-src --toolchain nightly

    - name: Build with cargo
      if: matrix.language == 'rust'
      run: |
        cd QuantumFuse/core
        cargo update
        cargo build --release
        cargo test

    # Go setup and build
    - name: Set up Go
      if: matrix.language == 'go'
      uses: actions/setup-go@v3
      with:
        go-version: '1.20' # Ensure using the latest Go version

    - name: Ensure go.sum is present
      if: matrix.language == 'go'
      run: |
        test -f QuantumFuseNode/go.sum || go mod tidy

    - name: Build with go
      if: matrix.language == 'go'
      run: |
        cd QuantumFuseNode
        go mod tidy
        go build ./...
        go test ./...

    # Python setup and build
    - name: Set up Python
      if: matrix.language == 'python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Python dependencies
      if: matrix.language == 'python'
      run: |
        python -m pip install --upgrade pip
        pip install -r QuantumFuse/api/requirements.txt

    - name: Run Python application
      if: matrix.language == 'python'
      run: |
        cd QuantumFuse/api
        python -m unittest discover -s tests

    # Node.js setup and build
    - name: Set up Node.js
      if: matrix.language == 'nodejs'
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Node.js dependencies
      if: matrix.language == 'nodejs'
      run: |
        cd QuantumFuse/frontend/quantumfuse-app
        npm install

    - name: Build with npm
      if: matrix.language == 'nodejs'
      run: |
        cd QuantumFuse/frontend/quantumfuse-app
        npm run build

    - name: Test with npm
      if: matrix.language == 'nodejs'
      run: |
        cd QuantumFuse/frontend/quantumfuse-app
        npm test
