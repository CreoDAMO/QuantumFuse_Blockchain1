name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    # Setup and cache for Rust dependencies
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
        components: rust-src
        target: x86_64-unknown-linux-gnu

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    # Setup and cache for Go dependencies
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    # Setup and cache for Node.js dependencies
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    # Setup and cache for Python dependencies
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r QuantumFuse/core/QuantumFuse/node/QuantumFuse/api/requirements.txt

    # Install dependencies using the Makefile
    - name: Install dependencies via Makefile
      run: make setup

    # Build the project
    - name: Build the project via Makefile
      run: make build

    # Run tests
    - name: Run tests via Makefile
      run: make test

    # Clean up artifacts after building and testing
    - name: Clean the build artifacts
      run: make clean

    # Optional: Run static checks if defined in Makefile
    - name: Run static checks (optional)
      run: make check
      if: success() && (steps.check.outcome == 'success' || steps.check.outcome == 'failure')

    # Optional: Run distribution checks if defined in Makefile
    - name: Run distribution checks (optional)
      run: make distcheck
      if: success() && (steps.distcheck.outcome == 'success' || steps.distcheck.outcome == 'failure')
