openapi: 3.0.0
info:
  title: QuantumFuse API
  description: Open API for interacting with the QuantumFuse blockchain.
  version: 1.0.0

servers:
  - url: https://api.quantumfuse.com/v1
    description: Main API server

paths:
  /transactions/new:
    post:
      summary: Create a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blocks/mine:
    post:
      summary: Mine a new block
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
              required:
                - address
      responses:
        '200':
          description: New block mined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
        '500':
          description: Mining failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blocks:
    get:
      summary: Get the full blockchain
      responses:
        '200':
          description: A list of all blocks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockList'

  /nodes/register:
    post:
      summary: Register a new node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nodes:
                  type: array
                  items:
                    type: string
              required:
                - nodes
      responses:
        '201':
          description: New node registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wallets/create:
    post:
      summary: Create a new wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletRequest'
      responses:
        '201':
          description: Wallet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wallets/balance:
    get:
      summary: Get wallet balance
      parameters:
        - name: address
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Wallet balance retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletBalance'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /smartcontracts/deploy:
    post:
      summary: Deploy a new smart contract
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartContractRequest'
      responses:
        '201':
          description: Smart contract deployed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContractResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /smartcontracts/execute:
    post:
      summary: Execute a smart contract
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteSmartContractRequest'
      responses:
        '200':
          description: Smart contract executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContractExecutionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Transaction:
      type: object
      properties:
        sender:
          type: string
        recipient:
          type: string
        amount:
          type: number
        signature:
          type: string
      required:
        - sender
        - recipient
        - amount
        - signature

    TransactionResponse:
      type: object
      properties:
        message:
          type: string
        transaction_id:
          type: string

    Block:
      type: object
      properties:
        index:
          type: integer
        timestamp:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        previous_hash:
          type: string
        hash:
          type: string
        nonce:
          type: integer

    BlockList:
      type: object
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/Block'

    NodeResponse:
      type: object
      properties:
        message:
          type: string
        total_nodes:
          type: array
          items:
            type: string

    WalletRequest:
      type: object
      properties:
        password:
          type: string
      required:
        - password

    WalletResponse:
      type: object
      properties:
        address:
          type: string
        private_key:
          type: string

    WalletBalance:
      type: object
      properties:
        address:
          type: string
        balance:
          type: number

    SmartContractRequest:
      type: object
      properties:
        code:
          type: string
        params:
          type: array
          items:
            type: string
      required:
        - code
        - params

    SmartContractResponse:
      type: object
      properties:
        contract_address:
          type: string

    ExecuteSmartContractRequest:
      type: object
      properties:
        contract_address:
          type: string
        function_name:
          type: string
        params:
          type: array
          items:
            type: string
      required:
        - contract_address
        - function_name
        - params

    SmartContractExecutionResponse:
      type: object
      properties:
        result:
          type: string

    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message
